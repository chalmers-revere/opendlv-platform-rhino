version: '2'

services:
################################################################################
#
# the CAN Interfaces for Rhino need an odsupercomponent.
#
################################################################################

    odsupercomponent:
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:v0.1.5
        restart: on-failure
        network_mode: "host"
        volumes:
        - .:/opt/opendlv.data
        command: "/opt/od4/bin/odsupercomponent --configuration=/opt/opendlv.data/configuration --cid=111"

######################################################################################
#
# Microservices for RHINO (Volvo FH16).
#
######################################################################################

    # OxTS GPS
    dev-gps-ncom:
        container_name: dev-gps-ncom
        image: chalmersrevere/opendlv-device-gps-ncom-multi:v0.0.15
        restart: on-failure
        network_mode: "host"
        command: "--ncom_ip=0.0.0.0 --ncom_port=3000 --cid=111"

    # Velodyne VLP32c Lidar
    dev-lidar-vlp32c:
       container_name: dev-lidar-vlp32c
       image: chalmersrevere/opendlv-device-lidar-vlp32c-multi:v0.0.2
       restart: always
       network_mode: "host"
       command: "--vlp32c_ip=0.0.0.0 --vlp32c_port=2368 --cid=111"

    # Accessing a video stream using OpenCV.
#    dev-camera-opencv:
#        container_name: dev-camera-opencv
#        image: chalmersrevere/opendlv-device-camera-opencv-multi:v0.0.10
#        restart: always
#        ipc: "host"
#        network_mode: "host"
#        volumes:
#        - /tmp:/tmp
#        command: "--camera=http://root:axiscamera@10.40.40.29/axis-cgi/mjpg/video.cgi\\?channel=0\\&.mjpg --width=640 --height=480 --freq=20 --name.i420=video0.i420 --name.argb=video0.argb"

    # Encoder for camera-opencv(x264)
    # x264(for research) has the better performance;
#    video-x264-encoder-amd64:
#        container_name: video-x264-encoder-amd64
#        build:
#            context: https://github.com/chalmers-revere/opendlv-video-x264-encoder.git
#            dockerfile: Dockerfile.amd64
#        restart: on-failure
#        network_mode: "host"
#        ipc: "host"
#        volumes:
#        - /tmp:/tmp
#        command: "--cid=111 --name=video0.i420 --width=640 --height=480"

    # Volvo Angle Sensor using lab jack
#    dev-io-ue9-amd64:
#        container_name: dev-io-ue9-amd64
#        image: olbender/opendlv-device-io-ue9-amd64:v0.0.1
#        restart: on-failure
#        network_mode: "host"
#        command: "opendlv-device-io-ue9 --ip=10.40.40.101 --cid=111 --verbose"

    # CAN interface to access Rhino.
    opendlv-rhino:
        container_name: opendlv-rhino
        image: seresearch/opendlv-rhino-on-opendlv-on-opendlv-core-on-opendavinci-on-base:v0.1.5
        restart: on-failure
        network_mode: "host"
        privileged: true
        depends_on:
        - odsupercomponent
        command: "/opt/opendlv.rhino/bin/opendlv-proxy-rhino-can --freq=100 --cid=111 --id=1"
    
    # PS3 controller
#    dev-ps3controller:
#        container_name: dev-ps3controller
#        image: chalmersrevere/opendlv-device-gamepad-multi:v0.0.10
#        restart: on-failure
#        network_mode: "host"
#        devices:
#        - "/dev/input/js0:/dev/input/js0"
#        command: "--device=/dev/input/js0 --axis_leftright=0 --axis_updown=4 --freq=100 --acc_min=0 --acc_max=50 --dec_min=0 --dec_max=-10 --steering_min=-10 --steering_max=10 --steering_max_rate=2.0 --cid=111"

    # PS4 controller 
#    dev-ps4controller:
#        container_name: dev-ps4controller
#        image: chalmersrevere/opendlv-device-gamepad-multi:v0.0.10
#        restart: on-failure
#        network_mode: "host"
#        devices:
#        - "/dev/input/js0:/dev/input/js0"
#        command: "--device=/dev/input/js0 --axis_leftright=0 --axis_updown=4 --freq=100 --acc_min=0 --acc_max=50 --dec_min=0 --dec_max=-10 --steering_min=-10 --steering_max=10 --steering_max_rate=5.0 --cid=111"

######## NOTE: To make steering sluggish, reduce steering_max_rate i.e. 0 < steering_max_rate < 2  

    # Web-application for viewing vehicle data.
    vehicle-view:
        container_name: opendlv-vehicle-view
        image: chalmersrevere/opendlv-vehicle-view-multi:v0.0.43
        restart: always
        network_mode: "host"
        volumes:
        - ~/recordings:/opt/vehicle-view/recordings
        - /var/run/docker.sock:/var/run/docker.sock
        environment:
        - OD4SESSION_CID=111
        - OPENDLV_VEHICLE_VIEW_PLATFORM=Rhino        
        ports:
        - "8081:8081"

######################################################################################
#
# Other Microservices.
#
######################################################################################

    # Encoder for camera-opencv(h264) for industrial applications
#    video-h264-encoder-amd64:
#        container_name: video-h264-encoder-amd64
#        build:
#           context: https://github.com/chalmers-revere/opendlv-video-h264-encoder.git
#            dockerfile: Dockerfile.amd64
#        restart: on-failure
#        network_mode: "host"
#        ipc: "host"
#        volumes:
#        - /tmp:/tmp
#       command: "--cid=111 --name=video0.i420 --width=640 --height=480"

    # Encoder for camera-opencv(vp8)
#    video-vpx-encoder:
#        container_name: video-vpx-encoder 
#        image: chalmersrevere/opendlv-video-vpx-encoder-multi:v0.0.5
#        restart: on-failure
#        network_mode: "host"
#        ipc: "host"
#        volumes:
#        - /tmp:/tmp
#        command: "--cid=111 --name=video0.i420 --width=640 --height=480 --vp8"

    # Accessing a video stream from Video4Linux-supported cameras.
#    dev-camera-v4l:
#        container_name: dev-camera-v4l
#        image: chalmersrevere/opendlv-device-camera-v4l-multi:v0.0.6
#        restart: always
#        ipc: "host"
#        network_mode: "host"
#        volumes:
#        - /tmp:/tmp
#        command: "--camera=/dev/video0 --width=640 --height=480 --freq=20"

    # Trimble GPS
#    dev-gps-nmea:
#        container_name: dev-gps-nmea
#        image: chalmersrevere/opendlv-device-gps-nmea-multi:v0.0.9
#        restart: on-failure
#        network_mode: "host"
#        command: "--nmea_ip=10.42.42.23 --nmea_port=9999 --cid=111"

    # Velodyne VLP16 Lidar
#    dev-lidar-vlp16c:
#        container_name: dev-lidar-vlp16c
#        image: chalmersrevere/opendlv-device-lidar-vlp16-multi:v0.0.9
#        restart: on-failure
#        network_mode: "host"
#        command: "--vlp16_ip=0.0.0.0 --vlp16_port=2368 --cid=111"
        
    # Convert video data into images.
#	 rec2csv_png:
#        container_name: rec2csv_png
#        build:
#            context: https://github.com/chalmers-revere/rec2csv-png.git
#            dockerfile: Dockerfile.amd64
#        restart: on-failure
#        volumes:
#        - .:/opt/data
#        working_dir: /opt/data
#        command: "--rec=YourRecording.rec --odvd=YourMessageSpec.odvd"
